#!/bin/bash
# This script Interactively list users and their public keys that the SSH server
# accepts for Public Key Authentication. It then allows you to delete a specific
# public key.

USERNAME=""
# If username is passed as argument, check if it exists and proceed
id "$1" &> /dev/null
if [[ $? == 0 ]]; then
  USERNAME=$1
else

  # Create array of users in system
  count=0
  for u_dir in /home/*; do
    u_options[$count]=$(echo $u_dir | sed 's_/\home\/__')
    ((count++))
  done

  echo "Choose the username whose public key that you want to delete: (1-$(((${#u_options[@]}+1))))?"
  select u_name in "${u_options[@]}" "EXIT/QUIT" ; do
    if (( REPLY == 1 + ${#u_options[@]} )) ; then
        exit
    elif (( REPLY > 0 && REPLY <= ${#u_options[@]} )) ; then
        USERNAME=$u_name
        break
    else
        echo "Invalid option. Try again."
    fi
  done
fi

echo "For user: $USERNAME, listing public keys..."

# Check is authorized_keys file is present
if [[ ! -f "/home/$USERNAME/.ssh/authorized_keys" ]]; then
  echo "WARNING: $USERNAME's authorized_keys file does not exist."
  echo "No public keys present for deletion."

fi
